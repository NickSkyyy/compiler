error @9: cannot match type <integer> to identifier <s0>
error @10: cannot match type <integer> to identifier <s1>
error @11: cannot match type <string> to identifier <s2>
error @12: cannot match type <string> to identifier <d>
error @13: cannot match type <string> to identifier <e>
error @14: cannot match type <character> to identifier <c1>
+--------------------------------+
- Source file: tests/test_lab6.c -
+--------------------------------+
error @5: identifier _F2I not declared
error @5: identifier _T2I not declared
error @10: identifier s1 not declared

lno@0    @0    program        children: [ @1 @10 @19 @28 @43 @49 @58 @70 @76 @84 @92 @97 ]
lno@2    @1    statement      children: [ @2 @3 @4 @7 ]
               stmt: declaration
lno@2    @2    key            key: const
lno@2    @3    type           type: boolean
lno@2    @4    statement      children: [ @5 @6 ]
               stmt: assign
lno@2    @5    variable       varname: _T
lno@2    @6    const          value: 1
lno@2    @7    statement      children: [ @8 @9 ]
               stmt: assign
lno@2    @8    variable       varname: _F
lno@2    @9    const          value: 0
lno@3    @10   statement      children: [ @11 @12 @13 @16 ]
               stmt: declaration
lno@3    @11   key            key: const
lno@3    @12   type           type: boolean
lno@3    @13   statement      children: [ @14 @15 ]
               stmt: assign
lno@3    @14   variable       varname: _12T
lno@3    @15   const          value: 1
lno@3    @16   statement      children: [ @17 @18 ]
               stmt: assign
lno@3    @17   variable       varname: _02F
lno@3    @18   const          value: 0
lno@4    @19   statement      children: [ @20 @21 @22 @25 ]
               stmt: declaration
lno@4    @20   key            key: const
lno@4    @21   type           type: character
lno@4    @22   statement      children: [ @23 @24 ]
               stmt: assign
lno@4    @23   variable       varname: _CH
lno@4    @24   const          value: a
lno@4    @25   statement      children: [ @26 @27 ]
               stmt: assign
lno@4    @26   variable       varname: _I2CH
lno@4    @27   const          value: 48
lno@5    @28   statement      children: [ @29 @30 @31 @34 @37 @40 ]
               stmt: declaration
lno@5    @29   key            key: const
lno@5    @30   type           type: integer
lno@5    @31   statement      children: [ @32 @33 ]
               stmt: assign
lno@5    @32   variable       varname: _INT
lno@5    @33   const          value: 0
lno@5    @34   statement      children: [ @35 @36 ]
               stmt: assign
lno@5    @35   variable       varname: _CH2I
lno@5    @36   const          value: a
lno@5    @37   statement      children: [ @38 @39 ]
               stmt: assign
lno@5    @38   variable       varname: _F2I
lno@5    @39   const          value: 0
lno@5    @40   statement      children: [ @41 @42 ]
               stmt: assign
lno@5    @41   variable       varname: _T2I
lno@5    @42   const          value: 1
lno@6    @43   statement      children: [ @44 @45 @46 ]
               stmt: declaration
lno@6    @44   key            key: const
lno@6    @45   type           type: string
lno@6    @46   statement      children: [ @47 @48 ]
               stmt: assign
lno@6    @47   variable       varname: _STR
lno@6    @48   const          value: qixiaorui
lno@9    @49   statement      children: [ @50 @51 @52 @55 ]
               stmt: declaration
lno@9    @50   key            key: const
lno@9    @51   type           type: integer
lno@9    @52   statement      children: [ @53 @54 ]
               stmt: assign
lno@9    @53   variable       varname: a
lno@9    @54   const          value: 1
lno@9    @55   statement      children: [ @56 @57 ]
               stmt: assign
lno@9    @56   variable       varname: s0
lno@9    @57   const          value: abc
lno@10   @58   statement      children: [ @59 @60 @61 @64 @67 ]
               stmt: declaration
lno@10   @59   key            key: const
lno@10   @60   type           type: integer
lno@10   @61   statement      children: [ @62 @63 ]
               stmt: assign
lno@10   @62   variable       varname: b
lno@10   @63   const          value: 1
lno@10   @64   statement      children: [ @65 @66 ]
               stmt: assign
lno@10   @65   variable       varname: c0
lno@10   @66   const          value: 2
lno@10   @67   statement      children: [ @68 @69 ]
               stmt: assign
lno@10   @68   variable       varname: s1
lno@10   @69   const          value: abc
lno@11   @70   statement      children: [ @71 @72 @73 ]
               stmt: declaration
lno@11   @71   key            key: const
lno@11   @72   type           type: string
lno@11   @73   statement      children: [ @74 @75 ]
               stmt: assign
lno@11   @74   variable       varname: s2
lno@11   @75   const          value: c
lno@12   @76   statement      children: [ @77 @78 @81 ]
               stmt: declaration
lno@12   @77   type           type: string
lno@12   @78   statement      children: [ @79 @80 ]
               stmt: assign
lno@12   @79   variable       varname: s3
lno@12   @80   const          value: abc
lno@12   @81   statement      children: [ @82 @83 ]
               stmt: assign
lno@12   @82   variable       varname: d
lno@12   @83   const          value: 3
lno@13   @84   statement      children: [ @85 @86 @89 ]
               stmt: declaration
lno@13   @85   type           type: string
lno@13   @86   statement      children: [ @87 @88 ]
               stmt: assign
lno@13   @87   variable       varname: s4
lno@13   @88   const          value: aa", s5 = "bb
lno@13   @89   statement      children: [ @90 @91 ]
               stmt: assign
lno@13   @90   variable       varname: e
lno@13   @91   const          value: 4
lno@14   @92   statement      children: [ @93 @94 ]
               stmt: declaration
lno@14   @93   type           type: character
lno@14   @94   statement      children: [ @95 @96 ]
               stmt: assign
lno@14   @95   variable       varname: c1
lno@14   @96   const          value: test

lno@16   @97   program        children: [ @98 @99 @100 ]
lno@16   @98   type           type: integer
lno@16   @99   key            key: main
lno@19   @100  statement      children: [ @101 @110 @116 @122 @128 @134 @137 @143 @145 @147 @149 @151 @153 @154 @155 @156 @157 ]
               stmt: block
lno@19   @101  statement      children: [ @102 @103 @106 ]
               stmt: declaration
lno@19   @102  type           type: boolean
lno@19   @103  statement      children: [ @104 @105 ]
               stmt: assign
lno@19   @104  variable       varname: t
lno@19   @105  const          value: 1
lno@19   @106  statement      children: [ @107 @108 @109 ]
               stmt: assign
lno@19   @107  variable       varname: f
lno@19   @108  const          value: 0
lno@19   @109  variable       varname: tf
lno@20   @110  statement      children: [ @111 @112 @115 ]
               stmt: declaration
lno@20   @111  type           type: character
lno@20   @112  statement      children: [ @113 @114 ]
               stmt: assign
lno@20   @113  variable       varname: ch
lno@20   @114  const          value: a
lno@20   @115  variable       varname: tch
lno@21   @116  statement      children: [ @117 @118 @121 ]
               stmt: declaration
lno@21   @117  type           type: integer
lno@21   @118  statement      children: [ @119 @120 ]
               stmt: assign
lno@21   @119  variable       varname: dnum
lno@21   @120  const          value: 412
lno@21   @121  variable       varname: td
lno@22   @122  statement      children: [ @123 @124 @127 ]
               stmt: declaration
lno@22   @123  type           type: integer
lno@22   @124  statement      children: [ @125 @126 ]
               stmt: assign
lno@22   @125  variable       varname: hnum
lno@22   @126  const          value: 20
lno@22   @127  variable       varname: th
lno@23   @128  statement      children: [ @129 @130 @133 ]
               stmt: declaration
lno@23   @129  type           type: integer
lno@23   @130  statement      children: [ @131 @132 ]
               stmt: assign
lno@23   @131  variable       varname: onum
lno@23   @132  const          value: 8
lno@23   @133  variable       varname: to
lno@24   @134  statement      children: [ @135 @136 ]
               stmt: declaration
lno@24   @135  type           type: integer
lno@24   @136  variable       varname: itest
lno@25   @137  statement      children: [ @138 @139 @142 ]
               stmt: declaration
lno@25   @138  type           type: string
lno@25   @139  statement      children: [ @140 @141 ]
               stmt: assign
lno@25   @140  variable       varname: str
lno@25   @141  const          value: Hello World!
lno@25   @142  variable       varname: ts
lno@28   @143  statement      children: [ @136 @144 ]
               stmt: assign
lno@28   @136  variable       varname: itest
lno@28   @144  expression     children: [ @121 @127 ]
               opeartor: +
lno@28   @121  variable       varname: td
lno@28   @127  variable       varname: th
lno@29   @145  statement      children: [ @136 @146 ]
               stmt: assign
lno@29   @136  variable       varname: itest
lno@29   @146  expression     children: [ @133 @121 ]
               opeartor: -
lno@29   @133  variable       varname: to
lno@29   @121  variable       varname: td
lno@30   @147  statement      children: [ @136 @148 ]
               stmt: assign
lno@30   @136  variable       varname: itest
lno@30   @148  expression     children: [ @127 @133 ]
               opeartor: *
lno@30   @127  variable       varname: th
lno@30   @133  variable       varname: to
lno@31   @149  statement      children: [ @136 @150 ]
               stmt: assign
lno@31   @136  variable       varname: itest
lno@31   @150  expression     children: [ @121 @127 ]
               opeartor: /
lno@31   @121  variable       varname: td
lno@31   @127  variable       varname: th
lno@32   @151  statement      children: [ @136 @152 ]
               stmt: assign
lno@32   @136  variable       varname: itest
lno@32   @152  expression     children: [ @133 @121 ]
               opeartor: %
lno@32   @133  variable       varname: to
lno@32   @121  variable       varname: td
lno@33   @153  statement      children: [ @136 @127 ]
               stmt: assign
lno@33   @136  variable       varname: itest
lno@33   @127  variable       varname: th
lno@34   @154  statement      children: [ @136 @133 ]
               stmt: assign
lno@34   @136  variable       varname: itest
lno@34   @133  variable       varname: to
lno@35   @155  statement      children: [ @136 @121 ]
               stmt: assign
lno@35   @136  variable       varname: itest
lno@35   @121  variable       varname: td
lno@36   @156  statement      children: [ @136 @127 ]
               stmt: assign
lno@36   @136  variable       varname: itest
lno@36   @127  variable       varname: th
lno@37   @157  statement      children: [ @136 @133 ]
               stmt: assign
lno@37   @136  variable       varname: itest
lno@37   @133  variable       varname: to

++ idt map ++
_T : boolean(@5, @4)
_F : boolean(@8, @7)
_12T : integer(@14, @13)
_02F : integer(@17, @16)
_CH : character(@23, @22)
_I2CH : integer(@26, @25)
_INT : integer(@32, @31)
_CH2I : character(@35, @34)
_STR : string(@47, @46)
a : integer(@53, @52)
s0 : string(@56, @55)
b : integer(@62, @61)
c0 : integer(@65, @64)
s2 : character(@74, @73)
s3 : string(@79, @78)
d : integer(@82, @81)
s4 : string(@87, @86)
e : integer(@90, @89)
c1 : string(@95, @94)
t : boolean(@104, @103)
f : boolean(@107, @106)
tf : NOT SURE(@109, @106)
ch : character(@113, @112)
tch : character(@115, @110)
dnum : integer(@119, @118)
td : integer(@121, @116)
hnum : integer(@125, @124)
th : integer(@127, @122)
onum : integer(@131, @130)
to : integer(@133, @128)
itest : integer(@136, @134)
str : string(@140, @139)
ts : string(@142, @137)
